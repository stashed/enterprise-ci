name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master

jobs:
  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s: [v1.12.10, v1.14.10, v1.16.9, v1.18.4]
    steps:
      - uses: actions/checkout@v1

      - name: Prepare git
        env:
          GITHUB_USER: 1gtm
          GITHUB_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          git config --global user.name "${GITHUB_USER}"
          git config --global user.email "${GITHUB_USER}@appscode.com"
          git remote set-url origin https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

      - name: Create Kubernetes ${{ matrix.k8s }} cluster
        id: kind
        uses: engineerd/setup-kind@v0.3.0
        with:
          version: v0.8.1
          config: hack/kubernetes/kind.yaml
          image: kindest/node:${{ matrix.k8s }}

      - name: Prepare cluster for testing
        id: local-path
        env:
          USERNAME: 1gtm
          REGISTRY_SECRET: regcred
          GCR_SERVICE_ACCOUNT_JSON_KEY: ${{ secrets.CI_GCR_SERVICE_ACCOUNT_JSON_KEY }}
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          echo "install helm 3"
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          echo
          echo "create docker-registry secret"
          kubectl create secret docker-registry ${REGISTRY_SECRET} \
            --namespace=kube-system \
            --docker-server=https://gcr.io \
            --docker-username=_json_key \
            --docker-email=${USERNAME}@appscode.com \
            --docker-password="$(echo $GCR_SERVICE_ACCOUNT_JSON_KEY)"

      - name: Install NFS server dependencies
        run: |
          nodes=$(kubectl get nodes -o=jsonpath='{range .items[*]}{.metadata.name}{"\t"}{end}')
          for i in $nodes
          do
            echo "Installing NFS server dependencies in node: $i ...."
            docker exec $i apt-get update
            docker exec $i apt-get install -y nfs-kernel-server
          done

      - name: Check out installer
        run: |
          cd ..
          git clone https://github.com/stashed/installer.git
          cd installer
          git checkout master

      - name: Run e2e tests
        env:
          REGISTRY: gcr.io/appscode-ci
          REGISTRY_SECRET: regcred
          TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
          GCR_SERVICE_ACCOUNT_JSON_KEY: ${{ secrets.CI_GCR_SERVICE_ACCOUNT_JSON_KEY }}
          GITHUB_USER: 1gtm
          GITHUB_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          # https://stackoverflow.com/a/30969768/244009
          set -o allexport
          source event.env
          set +o allexport
          # check out enterprise operator
          cd ..
          git clone https://${GITHUB_USER}:${GITHUB_TOKEN}@$PR_REPO_URL.git
          cd $(basename $PR_REPO_URL)
          git checkout $PR_HEAD_SHA
          echo "preparing test credentials"
          mkdir -p hack/config
          echo -n "$TEST_CREDENTIALS" > hack/config/.env
          echo >> hack/config/.env
          echo "GOOGLE_SERVICE_ACCOUNT_JSON_KEY=$(echo $GOOGLE_SERVICE_ACCOUNT_JSON_KEY)" >> hack/config/.env
          make install
          echo
          sleep 10
          make e2e-parallel
